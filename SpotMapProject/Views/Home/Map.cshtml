@model SpotMapProject.Models.IndexViewModel

@{
    ViewBag.Title = "Map";
}

<h2>Map</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <head>
        <style>
            /* Set the size of the div element that contains the map */
            #map {
                height: 700px; /* The height is 400 pixels */
                width: 100%; /* The width is the width of the web page */
            }

            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }

            .controls {
                background-color: #fff;
                border-radius: 2px;
                border: 1px solid transparent;
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
                box-sizing: border-box;
                font-family: Roboto;
                font-size: 15px;
                font-weight: 300;
                height: 29px;
                margin-left: 17px;
                margin-top: 10px;
                outline: none;
                padding: 0 11px 0 13px;
                text-overflow: ellipsis;
                width: 400px;
            }

                .controls:focus {
                    border-color: #4d90fe;
                }

            .title {
                font-weight: bold;
            }

            #infowindow-content {
                display: none;
            }

            #map #infowindow-content {
                display: inline;
            }

            #loading {
                /*set to a negative number 1/2 of your width*/
                position: absolute;
                top: 50%;
                left: 50%;
                margin-top: -50px;
                margin-left: -50px;
                width: 100px;
                height: 100px;
            }
        </style>
    </head>
  
    <div class="form-horizontal">
        <div id="map"></div>
        <div id='loading' style='display: none'><img src="../../Content/Loaders/loader.gif" title="Loading" /></div>


        <div class="loader" id="loader">
        </div>
        <input id="pac-input" class="controls" type="text"
               placeholder="Enter a location">

        <script>
            var loadingdiv = document.getElementById('loading');
            loadingdiv.style.display = "block";
            var markers = [];
            var addMarker = [];
            // Initialize and add the map
            function initMap() {


                var iconBase = '../../Content/Markers/';
                var mapOptions = {
                    mapTypeId: 'roadmap'
                };
                var bounds = new google.maps.LatLngBounds();
                // The location of Uluru
                var uluru = { lat: 0, lng: 0 };
                // The map, centered at Uluru
                var map = new google.maps.Map(
                    document.getElementById('map'), { zoom: 4, center: uluru }, mapOptions);
                var infowindow = new google.maps.InfoWindow();
                var input = document.getElementById('pac-input');

                var autocomplete = new google.maps.places.Autocomplete(input);
                autocomplete.bindTo('bounds', map);

                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);


                autocomplete.addListener('place_changed', function () {
                    infowindow.close();
                    var place = autocomplete.getPlace();
                    if (!place.geometry) {
                        return;
                    }

                    if (place.geometry.viewport) {
                        map.fitBounds(place.geometry.viewport);
                    } else {
                        map.setCenter(place.geometry.location);
                        map.setZoom(17);
                    }

                });



                // The marker, positioned at Uluru
                google.maps.event.addListener(map, 'click', function (event) {
                    placeMarker(event.latLng);
                });



                function placeMarker(location) {
                    if (addMarker.length > 0) {
                        for (var i = 0; i < addMarker.length; i++) {
                            addMarker[0].setMap(null);
                        }
                        addMarker = [];

                    }

                    var marker = new google.maps.Marker({
                        position: location,
                        map: map,
                        animation: google.maps.Animation.DROP,
                        icon: iconBase + 'addmarker.png'
                    });
                    addMarker.push(marker);
                    var lat = marker.getPosition().lat();
                    var lng = marker.getPosition().lng();
                    var add_url = "/Spot/AddSpot?lat=" + String(lat) + "&lon=" + String(lng);
                    //+"&lon="+String(lon)+""
                    marker.info = new google.maps.InfoWindow({

                        content: 'Add This Marker' + " " + '<a href=' + add_url + ' > ADD</a> '
                        // content:"Add Spot"
                    });
                    google.maps.event.addListener(marker, 'click', function () {

                        var marker_map = this.getMap();
                        this.info.open(marker_map, this);

                        // window.location.href = marker.url;



                    });
                }

                $.ajax({
                    url: "/Spot/GetSpotsJSON",
                    type: "GET",
                    data: {},
                    success: function (data) {
                        var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow");
                        // var iconBase = 'https://drive.google.com/drive/folders/1d1SYy1UItwXQ0H-BjYiMRDrNSlHPUr7x?usp=sharing/';
                        var iconBase = '../../Content/Markers/';
                        var obj = data[0];
                        // alert(JSON.stringify(data));
                        //alert("JSON LOADED!");
                        for (i = 0; i < data.length; i++) {
                            var obj = data[i];
                            var myLatLng = { lat: parseFloat(obj.lat), lng: parseFloat(obj.lon) };
                            var url_link = "/Spot/Details/" + obj.Id;

                            if (obj.public == false) {
                                var marker = new google.maps.Marker({
                                    position: myLatLng,
                                    map: map,
                                    title: obj.title,
                                    animation: google.maps.Animation.DROP,
                                    name: obj.desc + '(Private)',
                                    // label: obj.title.charAt(0),
                                    url: "/Spot/Details/" + obj.Id,

                                    icon: iconBase + 'privatespot.png'


                                });

                                marker.info = new google.maps.InfoWindow({

                                    content: obj.desc + " " + '(Private)' + '<a href="' + url_link + '" >' + "Show Details </a> "
                                });

                            }
                            if (obj.public == true) {

                                var marker = new google.maps.Marker({
                                    position: myLatLng,
                                    map: map,
                                    animation: google.maps.Animation.DROP,
                                    title: obj.title,
                                    name: obj.desc,
                                    //label: obj.title.charAt(0),
                                    url: "/Spot/Details/" + obj.Id,

                                    icon: iconBase + 'publicspot.png'
                                });
                                marker.info = new google.maps.InfoWindow({

                                    content: obj.desc + " " + '<a href="' + url_link + '" >' + "Show Details </a> "
                                });



                            }



                            google.maps.event.addListener(marker, 'click', function () {

                                var marker_map = this.getMap();
                                this.info.open(marker_map, this);

                                // window.location.href = marker.url;



                            });
                            // map.fitBounds(bounds);
                            markers.push(marker);

                        }

                        var loadingdiv = document.getElementById('loading');
                        loadingdiv.style.display = "none";
                    }
                });

            }


        </script>

        <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAGuCkGLcAi5O91W6IF7pCpzT7bjBqbflc&callback=initMap">
        </script>


        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAGuCkGLcAi5O91W6IF7pCpzT7bjBqbflc&libraries=places&callback=initMap"
                async defer></script>


    </div>

}


