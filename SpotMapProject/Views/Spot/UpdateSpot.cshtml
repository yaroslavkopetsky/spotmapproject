@model SpotMapProject.Models.AspNetSpot
<style>
    /* Set the size of the div element that contains the map */
    #img {
        height: 300px; /* The height is 400 pixels */
        width: 300px; /* The width is the width of the web page */
    }
</style>
@using (Html.BeginForm("UpdateSpot", "Spot", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AspNetSpot</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        class="form-group">
        <hr />
        @{ 
            int i = 0;
        }
        @foreach (string p in ViewBag.photos)
        {

            <hr />
            <img src="@Url.Content("~/Content/SpotImages/" + p)" alt="IMAGES" id="img" />
            <hr />
             <a href="@Url.Content("~/Spot/UpdateImage?spot_id="+ViewBag.spotid+"&index="+i)">Update This Image</a>
             <hr />
            i++;
        }







        <hr />
        <label for="file">Add Images:</label>
        <input type="file" class="multiple" name="files" multiple />
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lon, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (User.IsInRole("admin") || User.IsInRole("moder"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.visible, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.visible, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.visible, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.@public, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.@public, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.@public, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("admin") || User.IsInRole("moder"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.added, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.added, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.added, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.author, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
