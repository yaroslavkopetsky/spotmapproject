@model SpotMapProject.Models.AspNetSpot
<head>
    <link href="../Content/Bootstrap/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom fonts for this template -->
    <link href="../Content/Bootstrap/vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css">

    <!-- Plugin CSS -->
    <link href="../Content/Bootstrap/vendor/magnific-popup/magnific-popup.css" rel="stylesheet" type="text/css">

    <!-- Custom styles for this template -->
    <link href="../Content/Bootstrap/css/freelancer.min.css" rel="stylesheet">
    <style>
        .form-group {
            font-size: 15px;
        }
    </style>
    
</head>
<title>Add Spot</title>
<nav class="navbar navbar-expand-lg bg-secondary fixed-top text-uppercase" id="mainNav">
    <div class="container">
        <a class="navbar-brand js-scroll-trigger" href="@Url.Content("~/Home/Index")">SpotMap</a>
        <button class="navbar-toggler navbar-toggler-right text-uppercase bg-primary text-white rounded" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
            Menu
            <i class="fa fa-bars"></i>
        </button>
        <div class="collapse navbar-collapse" id="navbarResponsive">
            <ul class="navbar-nav ml-auto">
                @if (Context.User.Identity.IsAuthenticated)
                {
                    <li class="nav-item mx-0 mx-lg-1">
                        <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="@Url.Content("~/Home/Map")">Show Map <img src="@Url.Content("~/Content/Icons/earth32.png")" alt="IMAGES" id="img" /></a>
                    </li>
                    <li class="nav-item mx-0 mx-lg-1">
                        <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="@Url.Content("~/Spot/AddSpot")">Add Spot <img src="@Url.Content("~/Content/Icons/plus.png")" alt="IMAGES" id="img" /></a>
                    </li>
                    if (Context.User.IsInRole("admin") || Context.User.IsInRole("moder"))
                    {
                        if (Context.User.IsInRole("admin"))
                        {
                            <li class="nav-item mx-0 mx-lg-1">
                                <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="@Url.Content("~/Roles/Index")">Administrating <img src="@Url.Content("~/Content/Icons/admin.png")" alt="IMAGES" id="img" /></a>
                            </li>

                        }
                    }
                    <li class="nav-item mx-0 mx-lg-1">
                        <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="@Url.Content("~/Spot/ShowFavoriteSpots")">Favorites <img src="@Url.Content("~/Content/Icons/favorite.png")" alt="IMAGES" id="img" /></a>
                    </li>
                }
                <li class="nav-item mx-0 mx-lg-1">
                    @Html.Partial("_LoginPartial");
                </li>

            </ul>
        </div>
    </div>
</nav>




@if (User.IsInRole("admin") || User.IsInRole("moder"))
{
    using (Html.BeginForm("AddSpot", "Spot", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>AspNetSpot</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label for="file">Upload Image:</label>
        <input type="file" class="multiple" name="files" multiple />
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
        
                <textarea name="desc" cols="35" rows="10"></textarea>

            </div>
        </div>
    

    <div class="form-group">
        @Html.LabelFor(model => model.lat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lon, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Request.QueryString["lat"] != null || Request.QueryString["lon"] != null)
    {

    }
    else
    {<a href="../Home/Map">Insert Data Manually or Use Map</a>}

    <div class="form-group">
        @Html.LabelFor(model => model.visible, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.visible, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.visible, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.@public, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.@public, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.@public, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }
}
else
{
    using (Html.BeginForm("RequestSpot", "Spot", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>AspNetSpot</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label for="file">Upload Image:</label>
                <input type="file" class="multiple" name="files" multiple />
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <textarea name="desc" cols="35" rows="10"></textarea>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lat, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lon, "", new { @class = "text-danger" })
                </div>

            </div>
            @if (Request.QueryString["lat"] != null || Request.QueryString["lon"] != null)
            {

            }
            else
            {<a href="../Home/Map">Insert Data Manually or Use Map</a>}
            <div class="form-group">
                @Html.LabelFor(model => model.@public, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.@public, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.@public, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>




    }
    <!-- Bootstrap core JavaScript -->
    <script src="../Content/Bootstrap/vendor/jquery/jquery.min.js"></script>
    <script src="../Content/Bootstrap/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Plugin JavaScript -->
    <script src="../Content/Bootstrap/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="../Content/Bootstrap/vendor/magnific-popup/jquery.magnific-popup.min.js"></script>

    <!-- Contact Form JavaScript -->
    <script src="../Content/Bootstrap/js/jqBootstrapValidation.js"></script>
    <script src="../Content/Bootstrap/js/contact_me.js"></script>

    <!-- Custom scripts for this template -->
    <script src="../Content/Bootstrap/js/freelancer.min.js"></script>
}


